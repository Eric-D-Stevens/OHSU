
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #qnorm(.5, 15, 4)
> 
> 
> 
> 
> # 3 die ostatistics Oct 30:
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.0.0     ✔ purrr   0.2.5
✔ tibble  1.4.2     ✔ dplyr   0.7.6
✔ tidyr   0.8.1     ✔ stringr 1.3.1
✔ readr   1.1.1     ✔ forcats 0.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> set.seed(12345)
> unif_means_ten <- numeric(10) # space for big results (vector of Os)
> for (i in 1:10000){
+   x <- runif(10, min = 1, max = 6) # draw random sample with 10 observations each
+   unif_means_ten[i] <- mean(x) # compute mean for each ith sample
+ }
> my_sim <- unif_means_ten %>% tibble(sample_mean = .)
> my_sim
# A tibble: 10,000 x 1
   sample_mean
         <dbl>
 1        4.21
 2        2.85
 3        3.72
 4        3.46
 5        3.14
 6        3.52
 7        4.32
 8        3.42
 9        3.03
10        3.80
# ... with 9,990 more rows
> 
> mm <- mean(unif_means_ten) # mean of the sampling distribution of means
> mm
[1] 3.502623
> 
> sem <- sd(unif_means_ten) # sem
> sem
[1] 0.458536
> 
> 
> graph <- ggplot(my_sim, aes(x = sample_mean)) +
+   geom_density(color = "dodgerblue") +
+   stat_function(fun = dnorm, args = list(mean = mm, sd = sem), color = "red")
> 
> graph
> 
> proc.time()
   user  system elapsed 
  1.241   0.101   1.335 
