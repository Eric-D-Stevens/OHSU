#labs(x = "Age", y = "Teaching Score", color = "Gender") +
geom_smooth(method = "lm", se = FALSE)
vit25d_model_interaction <- lm(x25d ~ ageyears * sex + zhfa * sex, data )
get_regression_table(vit25d_model_interaction)
regression_points <- get_regression_points(vit25d_model_interaction)
regression_points
ggplot(regression_points, aes(x = residual)) +
geom_histogram(binwidth = 2, color = "white") +
labs(x = "Residual") +
facet_wrap(~sex)
ggplot(regression_points, aes(x = ageyears, y = residual)) +
geom_point() +
labs(x = "ageyears", y = "Residual") +
geom_hline(yintercept = 0, col = "blue", size = 1) +
facet_wrap(~ sex)
ggplot(regression_points, aes(x = zhfa, y = residual)) +
geom_point() +
labs(x = "zhfa", y = "Residual") +
geom_hline(yintercept = 0, col = "blue", size = 1) +
facet_wrap(~ sex)
vit25_diag <- broom::augment(vit25d_model_interaction, data)
glimpse(vit25_diag)
vitd_ss <- regression_points %>%
summarise(total_ss = sum((x25d - mean(x25d))^2),
resid_ss = sum((x25d_hat - x25d)^2),
model_ss = sum((x25d_hat - mean(x25d_hat))^2))
vitd_ss
vitd_ss %>% mutate(risid_plus_model = resid_ss + model_ss)
var(regression_points["x25d"])
vitd_ss %>% mutate(total_over_nminusone = total_ss / (nrow(regression_points) - 1))
broom::glance(vit25d_model_interaction)["r.squared"]
mutate(vitd_ss, model_ss/total_ss)
vitd_complete <- vitd %>%
drop_na(x25d, sex, ageyears, zhfa)
int_mod <- lm(x25d ~ 1, data = vitd_complete)
get_regression_table(int_mod)
anova(int_mod, vit25d_model_interaction)
ggplot(data, aes(x = ageyears, y = x25d, color = sex)) +
geom_point() +
#labs(x = "Age", y = "Teaching Score", color = "Gender") +
geom_smooth(method = "lm", se = FALSE)
ggplot(regression_points, aes(x = ageyears, y = x25d_hat, color = sex)) +
geom_jitter(width = 0.1, height = 0.1) +
#labs(x = "Age", y = "Teaching Score", color = "Gender") +
geom_smooth(method = "lm", se = FALSE)
high_hat <- vit25_diag %>%
select(.hat) %>%
filter(.hat > 2*mean(.hat))
high_hat
high_hat <- vit25_diag %>%
select(.hat) %>%
filter(.hat > 3*mean(.hat))
high_hat
high_hat <- vit25_diag %>%
select(.hat) %>%
filter(.hat > 3*mean(.hat))
high_hat <- vit25_diag %>%
select(.hat) %>%
filter(.hat > 3*mean(.hat))
high_hat
high_hat <- vit25_diag %>%
select(ageyears, x25d,.hat) %>%
filter(.hat > 3*mean(.hat))
high_hat
high_hat <- vit25_diag %>%
select(ageyears, x25d,.hat) %>%
filter(.hat > 2*mean(.hat))
high_hat
high_hat <- vit25_diag %>%
select(ageyears, x25d,.hat) %>%
filter(.hat > 4*mean(.hat))
high_hat
high_hat <- vit25_diag %>%
select(ageyears, zhfa, x25d,.hat) %>%
filter(.hat > 4*mean(.hat))
high_hat
vit25d_model <- lm(x25d ~ scale(ageyears)*sex + scale(zhfa)*sex, data )
get_regression_table(vit25d_model)
vit25d_model <- lm(x25d ~ scale(ageyears)*sex, data )
get_regression_table(vit25d_model)
vit25d_model_age_sex <- lm(x25d ~ scale(ageyears)*sex, data )
get_regression_table(vit25d_model_age_sex)
vit25d_model_age_sex <- lm(x25d ~ scale(ageyears)*sex, data )
get_regression_table(vit25d_model_age_sex)
vit25_diag %>%
ggplot(x=ageyears, y=.hat) + geom_plot()
vit25_diag %>%
ggplot(x=ageyears, y=.hat) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat)) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color=red)) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point() +
geom_point(data = data, aes(x = zhfa, y=.hat, color='blue'))
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point() +
ggplot(aes(x=zhfa, y=.hat, color='blue')) + geom_point() +
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point() +
ggplot(aes(x=zhfa, y=.hat, color='blue')) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point()
ggplot(aes(x=zhfa, y=.hat, color='blue')) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point() %>%
ggplot(aes(x=zhfa, y=.hat, color='blue')) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point()
vit25_diag %>%
ggplot(aes(x=zhfa, y=.hat, color='blue')) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat, color='red')) + geom_point()
vit25_diag %>%
ggplot(aes(x=zhfa, y=.hat, color='blue')) + geom_point()
vit25_diag %>%
ggplot(aes(x=ageyears, y=.hat)) + geom_point()
vit25_diag %>%
ggplot(aes(x=zhfa, y=.hat)) + geom_point()
vit25_diag <- broom::augment(vit25d_model_interaction, data) %>%
mutate(.ext.resid = restudent(vit25d_model_interaction))
library(student)
vit25_diag <- broom::augment(vit25d_model_interaction, data) %>%
mutate(.ext.resid = rstudent(vit25d_model_interaction))
glimpse(vit25_diag)
high_dis <- vit25_diag %>%
select(ageyears, zhfa, x25d, .std.resid, .ext.resid) %>%
arrange(desc(.ext.resid)) %>%
slice(1:5)
high_dis <- vit25_diag %>%
select(ageyears, zhfa, x25d, .std.resid, .ext.resid) %>%
arrange(desc(.ext.resid)) %>%
slice(1:5)
high_dis
ggplot(vit25_diag, aes(x=.hat, y=.ext.risid))+geom_point()
ggplot(vit25_diag, aes(x=.hat, y=.ext.resid))+geom_point()
ggplot(vit25_diag, aes(x=.hat, y=.ext.resid, alpha=.2))+geom_point()
ggplot(vit25_diag, aes(x=.hat, y=.ext.resid, alpha=.2, size=.cooksd)) + geom_point()
library(tidyverse)
library(infer)
library(skimr)
library(broom)
# DATA PATH CHANGED HERE TO WORK WITH MY SETU{}
mercury <- read_csv(here::here("OHSU_Fall_2018/MATH530/iLabs", "fishermen_mercury.csv"),
col_types = cols(
fisherman = col_factor(levels = NULL))
)
# DATA PATH CHANGED HERE TO WORK WITH MY SETU{}
mercury <- read_csv(here::here("OHSU_Fall_2018/MATH530/iLabs", "fishermen_mercury.csv"),
col_types = cols(
fisherman = col_factor(levels = NULL))
)
# DATA PATH CHANGED HERE TO WORK WITH MY SETU{}
mercury <- read_csv(here::here("OHSU_Fall_2018/MATH530/iLabs", "fishermen_mercury.csv"),
col_types = cols(
fisherman = col_factor(levels = NULL))
)
# DATA PATH CHANGED HERE TO WORK WITH MY SETU{}
mercury <- read_csv(here::here("OHSU_Fall_2018/MATH530/iLabs", "fishermen_mercury.csv"),
col_types = cols(
fisherman = col_factor(levels = NULL))
)
library(tidyverse)
library(infer)
library(skimr)
library(broom)
# DATA PATH CHANGED HERE TO WORK WITH MY SETU{}
mercury <- read_csv(here::here("OHSU_Fall_2018/MATH530/iLabs", "fishermen_mercury.csv"),
col_types = cols(
fisherman = col_factor(levels = NULL))
)
glimpse(mercury)
mercury %>%
group_by(fisherman) %>%
skim()
ggplot(mercury, aes(x=methyl_mercury)) +
geom_histogram(bins = 10, color='white') +
labs(x = "Mercury") +
facet_wrap(~fisherman)
ggplot(mercury, aes(x=total_mercury)) +
geom_histogram(bins = 10, color='white') +
labs(x = "Mercury") +
facet_wrap(~fisherman, )
ggplot(mercury, aes(total_mercury, fill = fisherman, colour = fisherman)) +
geom_density(alpha = 0.1) +
xlim(0, 7)
ggplot(mercury, aes(methyl_mercury, fill = fisherman, colour = fisherman)) +
geom_density(alpha = 0.1) +
xlim(0, 7)
n1 <- mercury %>% summarize(n1 = sum(fisherman == 1)) %>% pull(n1)
n0 <- mercury %>% summarize(n0 = sum(fisherman == 0)) %>% pull(n0)
s1 <- mercury %>% group_by(fisherman) %>% summarize(s = sd(total_mercury)) %>% filter(fisherman == 1)  %>% pull(s)
s0 <- mercury %>% group_by(fisherman) %>% summarize(s = sd(total_mercury)) %>% filter(fisherman == 0)  %>% pull(s)
sp <- sqrt(((n1-1)*s1^2+(n0-1)*s0^2)/(n1+n0-2))
sp
x1_bar <- mercury %>% group_by(fisherman) %>% summarize(x_bar = mean(total_mercury)) %>% filter(fisherman == 1)  %>% pull(x_bar)
x0_bar <- mercury %>% group_by(fisherman) %>% summarize(x_bar = mean(total_mercury)) %>% filter(fisherman == 0)  %>% pull(x_bar)
T_score = (x1_bar - x0_bar)/(sp*sqrt((s1^2/n1)+(s0^2/n0)))
T_score
upper_tcrit <- mercury %>%
specify(formula = total_mercury ~ fisherman) %>%
calculate(stat = "t", order = c(1, 0))
# fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both") # gives us shading
mean_diff <- T_score*(sp*sqrt((1/n1)+(1/n0)))
mean_diff
obs_diff <- mercury %>%
specify(formula = total_mercury ~ fisherman) %>%
calculate(stat = "diff in means", order = c(1, 0))
obs_diff
calc_dif = (x1_bar - x0_bar)/(sp*sqrt((1/n1)+(1/n0)))
calc_dif
mercury %>%
t_test(total_mercury ~ fisherman, order = c(1, 0), var.equal = TRUE)
df <- 10
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, args = list(df = df)) + # t dist
stat_function(fun = dnorm, lty = 3, color = "red") # normal dist in red
nsamp <- 135
(tcrits <- qt(c(.025, .975), df = nsamp - 2))
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both") # gives us shading
upper_tcrit <- tcrits[2] # fill in here
mercury $>$ specify(total_mercury ~ fisherman) %>%
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both") # gives us shading
upper_tcrit <- tcrits[2] # fill in here
mercury %>% specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both") # gives us shading
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both") # gives us shading
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both")
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both")
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both")
upper_tcrit <- mercury %>%
specify(formula = total_mercury ~ fisherman) %>%
calculate(stat = "t", order = c(1, 0))
library(tidyverse)
library(infer)
library(skimr)
library(broom)
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both")
library(tidyverse)
library(infer)
library(skimr)
library(broom)
# DATA PATH CHANGED HERE TO WORK WITH MY SETU{}
mercury <- read_csv(here::here("OHSU_Fall_2018/MATH530/iLabs", "fishermen_mercury.csv"),
col_types = cols(
fisherman = col_factor(levels = NULL))
)
glimpse(mercury)
mercury %>%
group_by(fisherman) %>%
skim()
ggplot(mercury, aes(x=methyl_mercury)) +
geom_histogram(bins = 10, color='white') +
labs(x = "Mercury") +
facet_wrap(~fisherman)
ggplot(mercury, aes(x=total_mercury)) +
geom_histogram(bins = 10, color='white') +
labs(x = "Mercury") +
facet_wrap(~fisherman, )
ggplot(mercury, aes(total_mercury, fill = fisherman, colour = fisherman)) +
geom_density(alpha = 0.1) +
xlim(0, 7)
ggplot(mercury, aes(methyl_mercury, fill = fisherman, colour = fisherman)) +
geom_density(alpha = 0.1) +
xlim(0, 7)
n1 <- mercury %>% summarize(n1 = sum(fisherman == 1)) %>% pull(n1)
n0 <- mercury %>% summarize(n0 = sum(fisherman == 0)) %>% pull(n0)
s1 <- mercury %>% group_by(fisherman) %>% summarize(s = sd(total_mercury)) %>% filter(fisherman == 1)  %>% pull(s)
s0 <- mercury %>% group_by(fisherman) %>% summarize(s = sd(total_mercury)) %>% filter(fisherman == 0)  %>% pull(s)
sp <- sqrt(((n1-1)*s1^2+(n0-1)*s0^2)/(n1+n0-2))
sp
x1_bar <- mercury %>% group_by(fisherman) %>% summarize(x_bar = mean(total_mercury)) %>% filter(fisherman == 1)  %>% pull(x_bar)
x0_bar <- mercury %>% group_by(fisherman) %>% summarize(x_bar = mean(total_mercury)) %>% filter(fisherman == 0)  %>% pull(x_bar)
T_score = (x1_bar - x0_bar)/(sp*sqrt((s1^2/n1)+(s0^2/n0)))
T_score
nsamp <- 135
(tcrits <- qt(c(.025, .975), df = nsamp - 2))
upper_tcrit <- mercury %>%
specify(formula = total_mercury ~ fisherman) %>%
calculate(stat = "t", order = c(1, 0))
# fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both") # gives us shading
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both")
mean_diff <- T_score*(sp*sqrt((1/n1)+(1/n0)))
mean_diff
obs_diff <- mercury %>%
specify(formula = total_mercury ~ fisherman) %>%
calculate(stat = "diff in means", order = c(1, 0))
obs_diff
calc_dif = (x1_bar - x0_bar)/(sp*sqrt((1/n1)+(1/n0)))
calc_dif
mercury %>%
t_test(total_mercury ~ fisherman, order = c(1, 0), var.equal = TRUE)
df <- 10
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, args = list(df = df)) + # t dist
stat_function(fun = dnorm, lty = 3, color = "red") # normal dist in red
mean_diff <- tcrits*(sp*sqrt((1/n1)+(1/n0)))
mean_diff
obs_t <- mercury %>%
t_test(total_mercury ~ fisherman, order = c(1, 0), var.equal = TRUE) %>%
pull(1)
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0), var.equal = TRUE) %>%
visualize(method = "theoretical",
obs_stat = obs_t,
direction = "both") +
geom_vline(aes(xintercept = tcrits), color = "dodgerblue")
upper <- pt(obs_t, df = nsamp - 2)
lower <- 1-pt(obs_t, df = nsamp - 2)
2*min(upper,lower)
ll <- mean_diff - (tcrits[2]*se_diff)
ll <- obs_diff - (tcrits[2]*se_diff)
se_diff <- (sp*sqrt((1/n1)+(1/n0)))
ll <- obs_diff - (tcrits[2]*se_diff)
ul <- obs_diff + (tcrits[2]*se_diff)
c(ll, ul)
set.seed(0)
mercury_diff <- mercury %>%
specify(total_mercury ~ fisherman) %>%
calculate(stat = "diff in means", order = c(1, 0))
null_fish <- mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c(1, 0))
null_fish %>%
visualize(obs_stat = mercury_diff, direction = "two_sided")
(pdiff <- null_fish %>%
get_pvalue(obs_stat = mercury_diff, direction = "two_sided"))
library(tidyverse)
library(infer)
library(skimr)
library(broom)
# DATA PATH CHANGED HERE TO WORK WITH MY SETU{}
mercury <- read_csv(here::here("OHSU_Fall_2018/MATH530/iLabs", "fishermen_mercury.csv"),
col_types = cols(
fisherman = col_factor(levels = NULL))
)
glimpse(mercury)
mercury %>%
group_by(fisherman) %>%
skim()
ggplot(mercury, aes(x=methyl_mercury)) +
geom_histogram(bins = 10, color='white') +
labs(x = "Mercury") +
facet_wrap(~fisherman)
ggplot(mercury, aes(x=total_mercury)) +
geom_histogram(bins = 10, color='white') +
labs(x = "Mercury") +
facet_wrap(~fisherman, )
ggplot(mercury, aes(total_mercury, fill = fisherman, colour = fisherman)) +
geom_density(alpha = 0.1) +
xlim(0, 7)
ggplot(mercury, aes(methyl_mercury, fill = fisherman, colour = fisherman)) +
geom_density(alpha = 0.1) +
xlim(0, 7)
n1 <- mercury %>% summarize(n1 = sum(fisherman == 1)) %>% pull(n1)
n0 <- mercury %>% summarize(n0 = sum(fisherman == 0)) %>% pull(n0)
s1 <- mercury %>% group_by(fisherman) %>% summarize(s = sd(total_mercury)) %>% filter(fisherman == 1)  %>% pull(s)
s0 <- mercury %>% group_by(fisherman) %>% summarize(s = sd(total_mercury)) %>% filter(fisherman == 0)  %>% pull(s)
sp <- sqrt(((n1-1)*s1^2+(n0-1)*s0^2)/(n1+n0-2))
sp
x1_bar <- mercury %>% group_by(fisherman) %>% summarize(x_bar = mean(total_mercury)) %>% filter(fisherman == 1)  %>% pull(x_bar)
x0_bar <- mercury %>% group_by(fisherman) %>% summarize(x_bar = mean(total_mercury)) %>% filter(fisherman == 0)  %>% pull(x_bar)
T_score = (x1_bar - x0_bar)/(sp*sqrt((s1^2/n1)+(s0^2/n0)))
T_score
nsamp <- 135
(tcrits <- qt(c(.025, .975), df = nsamp - 2))
upper_tcrit <- mercury %>%
specify(formula = total_mercury ~ fisherman) %>%
calculate(stat = "t", order = c(1, 0))
# fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both") # gives us shading
upper_tcrit <- tcrits[2] # fill in here
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0)) %>%
visualize(method = "theoretical",
obs_stat = upper_tcrit,
direction = "both")
mean_diff <- T_score*(sp*sqrt((1/n1)+(1/n0)))
mean_diff
mean_diff <- tcrits*(sp*sqrt((1/n1)+(1/n0)))
mean_diff
obs_diff <- mercury %>%
specify(formula = total_mercury ~ fisherman) %>%
calculate(stat = "diff in means", order = c(1, 0))
obs_diff
calc_dif = (x1_bar - x0_bar)/(sp*sqrt((1/n1)+(1/n0)))
calc_dif
mercury %>%
t_test(total_mercury ~ fisherman, order = c(1, 0), var.equal = TRUE)
df <- 10
ggplot(data.frame(x = c(-4, 4)), aes(x)) +
stat_function(fun = dt, args = list(df = df)) + # t dist
stat_function(fun = dnorm, lty = 3, color = "red") # normal dist in red
obs_t <- mercury %>%
t_test(total_mercury ~ fisherman, order = c(1, 0), var.equal = TRUE) %>%
pull(1)
mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
calculate(stat = "t", order = c(1,0), var.equal = TRUE) %>%
visualize(method = "theoretical",
obs_stat = obs_t,
direction = "both") +
geom_vline(aes(xintercept = tcrits), color = "dodgerblue")
upper <- pt(obs_t, df = nsamp - 2)
lower <- 1-pt(obs_t, df = nsamp - 2)
2*min(upper,lower)
se_diff <- (sp*sqrt((1/n1)+(1/n0)))
ll <- obs_diff - (tcrits[2]*se_diff)
ul <- obs_diff + (tcrits[2]*se_diff)
c(ll, ul)
set.seed(0)
mercury_diff <- mercury %>%
specify(total_mercury ~ fisherman) %>%
calculate(stat = "diff in means", order = c(1, 0))
null_fish <- mercury %>%
specify(total_mercury ~ fisherman) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c(1, 0))
null_fish %>%
visualize(obs_stat = mercury_diff, direction = "two_sided")
(pdiff <- null_fish %>%
get_pvalue(obs_stat = mercury_diff, direction = "two_sided"))
